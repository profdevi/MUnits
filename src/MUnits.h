//v1.8 copyright Comine.com 20130313W0122
#ifndef MUnits_h
#define MUnits_h

// Define the Kilogram
#ifndef MUNITS_KILOGRAM
#define MUNITS_KILOGRAM							(1.0)
#endif // MUNITSKILOGRAM

// Define the Meter
#ifndef MUNITS_METER
#define MUNITS_METER							(1.0)
#endif // MUNITS_METER

// Define Second
#ifndef MUNITS_SECOND
#define MUNITS_SECOND							(1.0)
#endif // MUNITS_SECOND

// Define COULOMB
#ifndef MUNITS_COULOMB
#define MUNITS_COULOMB							(1.0)
#endif // MUNITS_COULOMB

// Define the Kelvin
#ifndef MUNITS_KELVIN
#define MUNITS_KELVIN							(1.0)
#endif // MUNITS _KELVIN

// Define the mole
#ifndef MUNITS_MOLE
#define MUNITS_MOLE								(6.0221415e+23)
#endif // MUNITS_MOLE

// Math Constants
#define MUNITS_PI								(3.14159265358979323846)
#define MUNITS_EULER_CONSTANT					(2.71828182845904523536)

// Other Units
#define MUNITS_ATOMIC_MASS_UNIT					(1.66053886E-27*MUNITS_KILOGRAM)
#define MUNITS_CENTIMETER						(1.0e-2*MUNITS_METER)
#define MUNITS_INVCENTIMETER					(1.0/MUNITS_CENTIMETER)
#define MUNITS_MILLIMETER						(1.0e-3*MUNITS_METER)
#define MUNITS_MICROMETER						(1.0e-6*MUNITS_METER)
#define MUNITS_NANOMETER						(1.0e-9*MUNITS_METER)
#define MUNITS_ANGSTROM							(1.0e-10*MUNITS_METER)
#define MUNITS_PICOMETER						(1.0e-12*MUNITS_METER)
#define MUNITS_CUBICMETER						(MUNITS_METER*MUNITS_METER*MUNITS_METER)
#define MUNITS_SQUAREMETER						(MUNITS_METER*MUNITS_METER)
#define MUNITS_LETER							(1.0e-3*MUNITS_CUBICMETER)
#define MUNITS_FEMTOSECOND						(1.0e-15*MUNITS_SECOND)
#define MUNITS_PICOSECOND						(1.0e-12*MUNITS_SECOND)
#define MUNITS_NANOSECOND						(1.0e-9*MUNITS_SECOND)
#define MUNITS_MICROSECOND						(1.0e-6*MUNITS_SECOND)
#define MUNITS_MILLISECOND						(1.0e-3*MUNITS_SECOND)
#define MUNITS_NEWTON							(MUNITS_KILOGRAM*MUNITS_METER/(MUNITS_SECOND*MUNITS_SECOND))
#define MUNITS_NANONEWTOWS						(1.0e-9*MUNITS_NEWTON)
#define MUNITS_PICONEWTONS						(1.0e-12*MUNITS_NEWTON)
#define MUNITS_FEMTONEWTONS						(1.0e-15*MUNITS_NEWTON)
#define MUNITS_PASCAL							(MUNITS_NEWTON/MUNITS_SQUAREMETER)
#define MUNITS_JOULE							(MUNITS_NEWTON*MUNITS_METER)
#define MUNITS_KILOJOULE						(1000.0*MUNITS_JOULE)
#define MUNITS_VOLT								(MUNITS_JOULE/MUNITS_COULOMB)
#define MUNITS_HERTZ							(1.0/MUNITS_SECOND)
#define MUNITS_WATT								(MUNITS_JOULE/MUNITS_SECOND)

// Physical Constants
#define MUNITS_VELOCITY_LIGHT					(299792458.0*MUNITS_METER/MUNITS_SECOND)
#define MUNITS_MASS_PROTON						(1.672621637E-27*MUNITS_KILOGRAM)
#define MUNITS_MASS_NEUTRON						(1.674927211E-27*MUNITS_KILOGRAM)
#define MUNITS_MASS_ELECTRON					(9.10938215E-31*MUNITS_KILOGRAM)
#define MUNITS_CHARGE_ELECTRON					(-1.602176487E-19*MUNITS_COULOMB)
#define MUNITS_CHARGE_PROTON					(-MUNITS_CHARGE_ELECTRON)
#define MUNITS_ELECTRONVOLT						(MUNITS_CHARGE_PROTON*MUNITS_VOLT)
#define MUNITS_BOLTZMANN_CONSTANT				(1.3806504E-23 * MUNITS_JOULE/MUNITS_KELVIN)
#define MUNITS_GRAVITATIONAL_CONSTANT			(6.67428e-11*MUNITS_METER*MUNITS_METER*MUNITS_METER  \
													/(MUNITS_KILOGRAM*MUNITS_SECOND*MUNITS_SECOND ) )
#define MUNITS_PLANK_CONSTANT					(6.62606896E-34 *MUNITS_KILOGRAM*MUNITS_METER*MUNITS_METER/MUNITS_SECOND)
#define MUNITS_HBAR								(MUNITS_PLANK_CONSTANT/(2.0*MUNITS_PI))
#define MUNITS_GAS_CONSTANT_R					(8.314472 * MUNITS_JOULE/(MUNITS_KELVIN * MUNITS_MOLE) )
#define MUNITS_PERMITTIVITY_E0					(8.8541878176E-12 * MUNITS_SECOND * MUNITS_SECOND * MUNITS_COULOMB * MUNITS_COULOMB \
													/(MUNITS_METER *MUNITS_METER * MUNITS_METER * MUNITS_KILOGRAM ) )						
#define MUNITS_FINESTRUCTURE_CONSTANT			(7.297352570e-3)
#define MUNITS_TEMPERATURE_STD					(273.15 * MUNITS_KELVIN)
#define MUNITS_PREASURE_STD						(1.0e5 * MUNITS_PASCAL)
#define MUNITS_WATER_DENSITY					(999.8395 * MUNITS_KILOGRAM/MUNITS_CUBICMETER)
#define MUNITS_HARTREE							(27.21138386*MUNITS_ELECTRONVOLT)
#define MUNITS_CALORIE							(4.184*MUNITS_JOULE)
#define MUNITS_KILOCAL_PER_MOLE					(1000*MUNITS_CALORIE/MUNITS_MOLE)
#define MUNITS_KILOJOULES_PER_MOLE				(MUNITS_KILOJOULE/MUNITS_MOLE)
#define MUNITS_AMPERE							(MUNITS_COULOMB/MUNITS_SECOND)
#define MUNITS_TESLA							(MUNITS_KILOGRAM/(MUNITS_COULOMB*MUNITS_SECOND))
#define MUNITS_GAUSS							(1.0e-4 * MUNITS_TESLA)
#define MUNITS_COULOMB_CONSTANT					(1.0/(4.0*MUNITS_PI*MUNITS_PERMITTIVITY_E0) )

//////////////////////////////////////////////////////
// ** Dont Use Stat Coulombs, it changes based on the context: Ref: http://en.wikipedia.org/wiki/Statcoulomb
#define MUNITS_DEBYE							((1.0e-21/299792458)*MUNITS_COULOMB*MUNITS_METER )

// Ref: http://en.wikipedia.org/wiki/Bohr_radius
#define MUNITS_BOHR								( MUNITS_HBAR/(MUNITS_MASS_ELECTRON*MUNITS_VELOCITY_LIGHT*MUNITS_FINESTRUCTURE_CONSTANT) )

///////////////////////////////////////////////////////
// Atomic Units For Simulations
//   Ref: http://physics.nist.gov/cgi-bin/cuu/Value?bohrrada0
//      \hbar = m_e  =  e = \frac{1}{4 \pi \epsion_0} = 1
//  Google Constants
#define MUNITS_AU_HBAR							( 1.05457148E-34 * MUNITS_METER*MUNITS_METER*MUNITS_KILOGRAM/MUNITS_SECOND )
#define	MUNITS_AU_MASS							( 9.10938188E-31 * MUNITS_KILOGRAM )
#define MUNITS_AU_CHARGE						( 1.602176565E-19 * MUNITS_COULOMB )
#define MUNITS_AU_COULOUMB_CONSTANT				( 8.9875517873681764E9 * MUNITS_NEWTON*MUNITS_METER*MUNITS_METER/(MUNITS_COULOMB*MUNITS_COULOMB) )
#define MUNITS_AU_LENGTH						( 0.52917721092E-10 *MUNITS_METER )
#define	MUNITS_AU_VELOCITY						( MUNITS_CHARGE_ELECTRON*MUNITS_CHARGE_ELECTRON*MUNITS_COULOMB_CONSTANT/MUNITS_HBAR )
#define MUNITS_AU_TIME							( MUNITS_BOHR/MUNITS_AU_VELOCITY )
#define MUNITS_AU_ENERGY						( MUNITS_MASS_ELECTRON * MUNITS_AU_VELOCITY * MUNITS_AU_VELOCITY )
#define MUNITS_AU_FREQUENCY						( 1.0/MUNITS_AU_TIME )
#define MUNITS_AU_FORCE							( MUNITS_COULOMB_CONSTANT * MUNITS_AU_CHARGE *MUNITS_AU_CHARGE/(MUNITS_AU_LENGTH*MUNITS_AU_LENGTH ))
#define MUNITS_AU_E								( MUNITS_COULOMB_CONSTANT * MUNITS_AU_CHARGE /(MUNITS_AU_LENGTH*MUNITS_AU_LENGTH ) )
#define MUNITS_AU_V								( MUNITS_COULOMB_CONSTANT * MUNITS_CHARGE_PROTON/MUNITS_BOHR )
#define MUNITS_AU_POWER							( MUNITS_AU_ENERGY / MUNITS_AU_TIME )
#define MUNITS_AU_FLUX_DENSITY					( MUNITS_AU_POWER / ( MUNITS_AU_LENGTH * MUNITS_AU_LENGTH ) )
#define MUNITS_AU_VELOCITY_LIGHT				( MUNITS_AU_LENGTH/(MUNITS_FINESTRUCTURE_CONSTANT*MUNITS_AU_TIME) )
#define MUNITS_AU_MASS_PROTON					( MUNITS_MASS_PROTON/MUNITS_MASS_ELECTRON * MUNITS_AU_MASS )
#define MUNITS_AU_MASS_NEUTRON					( MUNITS_MASS_NEUTRON/MUNITS_MASS_ELECTRON * MUNITS_AU_MASS )
#define MUNITS_AU_DEBYE							( MUNITS_CHARGE_PROTON*MUNITS_BOHR )

//////////////////////////////////////////////////////
double MUnitsCalcFineStructureConstant(void);
double MUnitsEnergyToWaveNumber(const double &energy);				//=Wave Number in cm^{-1}
double MUnitsWaveNumberToEnergy(const double &wavenumberincm);		//=energy from wavenumber in cm^{-1}

#endif // MUnits_h

